* For the recording model investigate IDSIMPIN2::drivetristate()



* There is a double write after a wait?!
	If the wait has not had a zero output before then the data after the wait is output again



* Need to find what is keeping the data file open each time



* At the moment inside DsimModel.cpp there is untested logic for "mTryGetData" and when to respond to a successful wait waitingForInput() by getting the next data value



* Add defines, simple key value replacement
	* #string value




* RELTIME IINSTANCE::getdelay and getboolval might be more useful for values like TOLOW THENTOHI etc
	However these would need to be strings, not floats. e.g. {CLOCKRATE="Clock Rate",STRING}
	> Check the existing values like 0.0001 are automaically converted to the correct delay
	> Also it would probably be better to keep the delays as RELTIME or ABSTIME for more accurate usage with setstate()
	For mInstance->




* Translate events from VSMDigitalData and send them direct to ELK (Elastic Search Kibana)
	In the text config of the VSM model, include groups of signals and name them.
	Also use the unique ID of the transmitting VSM
	Also have a global (for the simulation) unique ID, so that individual runs can be identified.
	Probably also have a name, to separate the run data.
	Try sending nano second tagged events, there was support for this value in ELK IIRC
	